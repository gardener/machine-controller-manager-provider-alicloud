#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -e

source "$(dirname ${0})/setupenv.src"

# Install Ginkgo (test framework) to be able to execute the tests.
go install github.com/onsi/ginkgo/v2/ginkgo
echo "Successfully fetched Ginkgo framework"
ginkgo version


##############################################################################

function test_with_coverage() {
  local output_dir=test/output
  local coverprofile_file=coverprofile.out
  mkdir -p test/output
  ginkgo $GINKGO_COMMON_FLAGS --coverprofile ${coverprofile_file} -covermode=set -outputdir ${output_dir} ${TEST_PACKAGES}

  sed -i -e '/mode: set/d' ${output_dir}/${coverprofile_file}
  {( echo "mode: set"; cat ${output_dir}/${coverprofile_file} )} > ${output_dir}/${coverprofile_file}.temp
  mv ${output_dir}/${coverprofile_file}.temp ${output_dir}/${coverprofile_file}
  go tool cover -func ${output_dir}/${coverprofile_file}
}

function test_without_coverage() {
  ginkgo $GINKGO_COMMON_FLAGS  ${TEST_PACKAGES}
}

###############################################################################

if [[ "${SKIP_UNIT_TESTS}" != "" ]]; then
  echo ">>>>>Skipping unit tests"
else
  echo ">>>>> Invoking unit tests"
  TEST_PACKAGES="pkg"
  GINKGO_COMMON_FLAGS="-r -timeout=1h0m0s --randomize-all --randomize-suites --fail-on-pending --show-node-events"
  test_without_coverage
  echo ">>>>> Finished executing unit tests"
fi

if [[ "${SKIP_INTEGRATION_TESTS}" != "" ]]; then
  echo ">>>>> Skipping integration tests"
else
  echo ">>>>> Invoking intergration tests"
  .ci/pipeline_integration_test
  echo ">>>>> Finished executing integration tests"
fi

echo "CI tests have passed successfully"